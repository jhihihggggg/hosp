# Generated by Django 5.2.7 on 2025-10-26 07:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CanteenItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_code", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("FOOD", "Food"),
                            ("BEVERAGE", "Beverage"),
                            ("SNACK", "Snack"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2, help_text="Cost to prepare/buy", max_digits=8
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                    ),
                ),
                (
                    "target_roles",
                    models.JSONField(
                        default=list,
                        help_text="List of roles to show this announcement to",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CanteenSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sale_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("sale_date", models.DateTimeField(auto_now_add=True)),
                ("customer_name", models.CharField(blank=True, max_length=200)),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("payment_method", models.CharField(default="CASH", max_length=50)),
                ("notes", models.TextField(blank=True)),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="canteen_purchases",
                        to="patients.patient",
                    ),
                ),
                (
                    "served_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="canteen_sales",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-sale_date"],
            },
        ),
        migrations.CreateModel(
            name="CanteenSaleItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="survey.canteenitem",
                    ),
                ),
                (
                    "sale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="survey.canteensale",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackSurvey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "survey_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                (
                    "overall_experience",
                    models.IntegerField(
                        choices=[
                            (1, "⭐ Poor"),
                            (2, "⭐⭐ Fair"),
                            (3, "⭐⭐⭐ Good"),
                            (4, "⭐⭐⭐⭐ Very Good"),
                            (5, "⭐⭐⭐⭐⭐ Excellent"),
                        ]
                    ),
                ),
                (
                    "staff_behavior",
                    models.IntegerField(
                        choices=[
                            (1, "⭐ Poor"),
                            (2, "⭐⭐ Fair"),
                            (3, "⭐⭐⭐ Good"),
                            (4, "⭐⭐⭐⭐ Very Good"),
                            (5, "⭐⭐⭐⭐⭐ Excellent"),
                        ]
                    ),
                ),
                (
                    "cleanliness",
                    models.IntegerField(
                        choices=[
                            (1, "⭐ Poor"),
                            (2, "⭐⭐ Fair"),
                            (3, "⭐⭐⭐ Good"),
                            (4, "⭐⭐⭐⭐ Very Good"),
                            (5, "⭐⭐⭐⭐⭐ Excellent"),
                        ]
                    ),
                ),
                (
                    "waiting_time",
                    models.IntegerField(
                        choices=[
                            (1, "⭐ Poor"),
                            (2, "⭐⭐ Fair"),
                            (3, "⭐⭐⭐ Good"),
                            (4, "⭐⭐⭐⭐ Very Good"),
                            (5, "⭐⭐⭐⭐⭐ Excellent"),
                        ]
                    ),
                ),
                (
                    "facility_quality",
                    models.IntegerField(
                        choices=[
                            (1, "⭐ Poor"),
                            (2, "⭐⭐ Fair"),
                            (3, "⭐⭐⭐ Good"),
                            (4, "⭐⭐⭐⭐ Very Good"),
                            (5, "⭐⭐⭐⭐⭐ Excellent"),
                        ]
                    ),
                ),
                (
                    "positive_feedback",
                    models.TextField(blank=True, help_text="What did you like?"),
                ),
                (
                    "negative_feedback",
                    models.TextField(blank=True, help_text="What can we improve?"),
                ),
                ("suggestions", models.TextField(blank=True)),
                ("would_recommend", models.BooleanField(null=True)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_surveys",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Feedback Surveys",
                "ordering": ["-submitted_at"],
            },
        ),
    ]
